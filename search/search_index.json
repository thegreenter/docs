{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Greenter"},{"location":"faq/","text":"Preguntas Frecuentes \u00b6 Facturas \u00b6 Que es el CDR CDR son las siglas de constancia de recepcion y es emitida por sunat indicando que una factura ha sido aceptada o rechazada. Para saber a cual estado pertenece la factura emitida, debemos identificar en que rango de la siguiente tabla se encuentra el codigo de respuesta. Rango Descripci\u00f3n Que hacer 0100 a 1999 Excepciones Corregir y volver a enviar la factura 2000 a 3999 Errores (Rechazo) Emitir una nueva factura >4000 Observaciones Corregir en futuras facturas Resumen diario \u00b6 Como obtener el CDR El proceso del resumen diario se compone de 2 fases, el env\u00edo y la obtenci\u00f3n del CDR; este \u00faltimo no siempre se puede obtener inmediatamente, para ello debemos tener en cuenta el c\u00f3digo que Sunat responde. C\u00f3digo Descripci\u00f3n Estado del CDR 0 Procesado correctamente Disponible 98 En Proceso Necesitamos volver a intentar 99 Procesado con errores Disponible WebService \u00b6 Bad Gateway Este es un error al conectarse con el servicio (Sunat u OSE), y lo unico que se puede hacer es informar al administrador del servicio y esperar. Could not connect to host Este mensaje puede ser resultado de varios casos, entre ellos falta de conectividad a internet, y otro mas recurrente por problemas al validar el certificado SSL del servicio a conectar. Para solucionar esto puede probar una de estas opciones: - Instalar el certificado de sunat en el servidor que se esta usando - En caso de sistemas linux, actualizar ca-certificates - Deshabilitar la verificaci\u00f3n SSL en Ws\\Services\\SoapClient.php <?php $parameters = [ 'stream_context' => stream_context_create ([ 'ssl' => [ 'verify_peer' => false , ], ]), ];","title":"Preguntas Frecuentes"},{"location":"faq/#preguntas-frecuentes","text":"","title":"Preguntas Frecuentes"},{"location":"faq/#facturas","text":"Que es el CDR CDR son las siglas de constancia de recepcion y es emitida por sunat indicando que una factura ha sido aceptada o rechazada. Para saber a cual estado pertenece la factura emitida, debemos identificar en que rango de la siguiente tabla se encuentra el codigo de respuesta. Rango Descripci\u00f3n Que hacer 0100 a 1999 Excepciones Corregir y volver a enviar la factura 2000 a 3999 Errores (Rechazo) Emitir una nueva factura >4000 Observaciones Corregir en futuras facturas","title":"Facturas"},{"location":"faq/#resumen-diario","text":"Como obtener el CDR El proceso del resumen diario se compone de 2 fases, el env\u00edo y la obtenci\u00f3n del CDR; este \u00faltimo no siempre se puede obtener inmediatamente, para ello debemos tener en cuenta el c\u00f3digo que Sunat responde. C\u00f3digo Descripci\u00f3n Estado del CDR 0 Procesado correctamente Disponible 98 En Proceso Necesitamos volver a intentar 99 Procesado con errores Disponible","title":"Resumen diario"},{"location":"faq/#webservice","text":"Bad Gateway Este es un error al conectarse con el servicio (Sunat u OSE), y lo unico que se puede hacer es informar al administrador del servicio y esperar. Could not connect to host Este mensaje puede ser resultado de varios casos, entre ellos falta de conectividad a internet, y otro mas recurrente por problemas al validar el certificado SSL del servicio a conectar. Para solucionar esto puede probar una de estas opciones: - Instalar el certificado de sunat en el servidor que se esta usando - En caso de sistemas linux, actualizar ca-certificates - Deshabilitar la verificaci\u00f3n SSL en Ws\\Services\\SoapClient.php <?php $parameters = [ 'stream_context' => stream_context_create ([ 'ssl' => [ 'verify_peer' => false , ], ]), ];","title":"WebService"},{"location":"migrate2.1/","text":"Migrar a UBL 2.1 \u00b6 En el archivo composer.json , ajustar la version de greenter/greenter a la version 3.0 . { \"require\" : { \"greenter/greenter\" : \"^3.0\" } } Luego ejecutar composer update greenter/greenter Nuevos Campos \u00b6 El principal cambio para indicar que el comprobante utilize UBL 2.1 , es seteando el campo ublVersion que existe en Invoice y Note . <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Note ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ); // .... $note = new Note (); $note -> setUblVersion ( '2.1' ); // ... Ejemplo En el ejemplo de primeros pasos, ver\u00e1 los nuevos campos resaltados en el c\u00f3digo.","title":"Migrar a UBL 2.1"},{"location":"migrate2.1/#migrar-a-ubl-21","text":"En el archivo composer.json , ajustar la version de greenter/greenter a la version 3.0 . { \"require\" : { \"greenter/greenter\" : \"^3.0\" } } Luego ejecutar composer update greenter/greenter","title":"Migrar a UBL 2.1"},{"location":"migrate2.1/#nuevos-campos","text":"El principal cambio para indicar que el comprobante utilize UBL 2.1 , es seteando el campo ublVersion que existe en Invoice y Note . <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Note ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ); // .... $note = new Note (); $note -> setUblVersion ( '2.1' ); // ... Ejemplo En el ejemplo de primeros pasos, ver\u00e1 los nuevos campos resaltados en el c\u00f3digo.","title":"Nuevos Campos"},{"location":"production/","text":"Greenter en Producci\u00f3n \u00b6 En esta secci\u00f3n de indican los pasos para convertirse en Emisor Electr\u00f3nico. UBL 2.1 Apartir de octubre del 2018 , los nuevos emisores electr\u00f3nicos estan obligados a emitir sus comprobantes empleando el est\u00e1ndar UBL 2.1 Pasos \u00b6 Creaci\u00f3n de usuario secundario con los permisos para Facturaci\u00f3n Electr\u00f3nica. Registrar el certificado digital en el portal de SUNAT, en formato .cer (Public key). Greenter requiere el certificado digital en formato .pem (Private & Public Key), si tiene un certificado .pfx puede convertirlo siguiendo esta gu\u00eda . Configurar la url del servicio de Producci\u00f3n. <?php use Greenter\\Ws\\Services\\SunatEndpoints ; $see = new \\Greenter\\See (); $see -> setService ( SunatEndpoints :: FE_PRODUCCION ); // Cambiar la url para cuando sea Percepci\u00f3n/Retenci\u00f3n o Gu\u00eda de Remisi\u00f3n. $see -> setCertificate ( file_get_contents ( __DIR__ . '/valid-cer.pem' )); $see -> setClaveSOL ( '20000000001D' , 'NOMBLOI' , 'psdlbmrt' ); Usuario Secundario Despues de crear el usuario secundario, tiene que esperar hasta un plazo de 24 horas para que este activo y pueda usarlo.","title":"Paso a Producci\u00f3n"},{"location":"production/#greenter-en-produccion","text":"En esta secci\u00f3n de indican los pasos para convertirse en Emisor Electr\u00f3nico. UBL 2.1 Apartir de octubre del 2018 , los nuevos emisores electr\u00f3nicos estan obligados a emitir sus comprobantes empleando el est\u00e1ndar UBL 2.1","title":"Greenter en Producci\u00f3n"},{"location":"production/#pasos","text":"Creaci\u00f3n de usuario secundario con los permisos para Facturaci\u00f3n Electr\u00f3nica. Registrar el certificado digital en el portal de SUNAT, en formato .cer (Public key). Greenter requiere el certificado digital en formato .pem (Private & Public Key), si tiene un certificado .pfx puede convertirlo siguiendo esta gu\u00eda . Configurar la url del servicio de Producci\u00f3n. <?php use Greenter\\Ws\\Services\\SunatEndpoints ; $see = new \\Greenter\\See (); $see -> setService ( SunatEndpoints :: FE_PRODUCCION ); // Cambiar la url para cuando sea Percepci\u00f3n/Retenci\u00f3n o Gu\u00eda de Remisi\u00f3n. $see -> setCertificate ( file_get_contents ( __DIR__ . '/valid-cer.pem' )); $see -> setClaveSOL ( '20000000001D' , 'NOMBLOI' , 'psdlbmrt' ); Usuario Secundario Despues de crear el usuario secundario, tiene que esperar hasta un plazo de 24 horas para que este activo y pueda usarlo.","title":"Pasos"},{"location":"starter/","text":"Empezando con Greenter \u00b6 Instalaci\u00f3n \u00b6 La forma mas facil de instalar grenter es utilizando composer . composer require greenter/lite Requerimientos \u00b6 T\u00e9cnico Certificado en formato PEM Credenciales Clave SOL Bases Para conocer m\u00e1s detalles sobre el proceso de Facturaci\u00f3n Electr\u00f3nica, puede consultar. FE Primer - Gu\u00eda de inicio hecho por Greenter cpe.sunat.gob.pe - P\u00e1gina oficial de SUNAT Configuraci\u00f3n \u00b6 En este ejemplo para firmar los comprobantes electr\u00f3nicos utilizaremos este certificado , y para conectarnos a los servicios de SUNAT, utilizaremos las credenciales Clave SOL que nos proporciona SUNAT en su documentaci\u00f3n: RUC: 20000000001 Usuario: MODDATOS Contrase\u00f1a: moddatos PKCS#12 Si cuenta con un certificado .p12 or .pfx , para convertirlo a formato .PEM necesita la clave y seguir el siguiente ejemplo Crearemos el archivo config.php donde configuraremos la ruta del servicio, el certificado digital y las credenciales (Clave SOL) para conectarnos al servicio BETA de SUNAT: <?php use Greenter\\Ws\\Services\\SunatEndpoints ; use Greenter\\See ; $see = new See (); $see -> setCertificate ( file_get_contents ( __DIR__ . '/certificate.pem' )); $see -> setService ( SunatEndpoints :: FE_BETA ); $see -> setClaveSOL ( '20000000001' , 'MODDATOS' , 'moddatos' ); return $see ; En el ambiente de producci\u00f3n lo recomendable es crear un usuario secundario con solo permisos para comprobantes electr\u00f3nicos. Factura Electr\u00f3nica \u00b6 Para este ejemplo se usar\u00e1 la version UBL 2.1 . Crearemos nuestra primera factura electr\u00f3nica, para ello en nuevo archivo factura.php agregaremos el siguiente c\u00f3digo: <?php use Greenter\\Model\\Client\\Client ; use Greenter\\Model\\Company\\Company ; use Greenter\\Model\\Company\\Address ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\SaleDetail ; use Greenter\\Model\\Sale\\Legend ; require __DIR__ . '/vendor/autoload.php' ; $see = require __DIR__ . '/config.php' ; // Cliente $client = new Client (); $client -> setTipoDoc ( '6' ) -> setNumDoc ( '20000000001' ) -> setRznSocial ( 'EMPRESA 1' ); // Emisor $address = new Address (); $address -> setUbigueo ( '150101' ) -> setDepartamento ( 'LIMA' ) -> setProvincia ( 'LIMA' ) -> setDistrito ( 'LIMA' ) -> setUrbanizacion ( 'NONE' ) -> setDireccion ( 'AV LS' ); $company = new Company (); $company -> setRuc ( '20000000001' ) -> setRazonSocial ( 'EMPRESA SAC' ) -> setNombreComercial ( 'EMPRESA' ) -> setAddress ( $address ); // Venta $invoice = ( new Invoice ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) // Catalog. 51 -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '1' ) -> setFechaEmision ( new DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $client ) -> setMtoOperGravadas ( 100.00 ) -> setMtoIGV ( 18.00 ) -> setTotalImpuestos ( 18.00 ) -> setValorVenta ( 100.00 ) -> setSubTotal ( 118.00 ) -> setMtoImpVenta ( 118.00 ) -> setCompany ( $company ); $item = ( new SaleDetail ()) -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 2 ) -> setDescripcion ( 'PRODUCTO 1' ) -> setMtoBaseIgv ( 100 ) -> setPorcentajeIgv ( 18.00 ) // 18% -> setIgv ( 18.00 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 18.00 ) -> setMtoValorVenta ( 100.00 ) -> setMtoValorUnitario ( 50.00 ) -> setMtoPrecioUnitario ( 59.00 ); $legend = ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON 00/100 SOLES' ); $invoice -> setDetails ([ $item ]) -> setLegends ([ $legend ]); $result = $see -> send ( $invoice ); // Guardar XML file_put_contents ( $invoice -> getName () . '.xml' , $see -> getFactory () -> getLastXml ()); if ( ! $result -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $result -> getError ()); exit (); } echo $result -> getCdrResponse () -> getDescription (); // Guardar CDR file_put_contents ( 'R-' . $invoice -> getName () . '.zip' , $result -> getCdrZip ()); Estructura del proyecto / \u251c\u2500\u2500 vendor/ \u251c\u2500\u2500 certificate.pem \u251c\u2500\u2500 composer.json \u251c\u2500\u2500 config.php \u251c\u2500\u2500 factura.php Ejecutar \u00b6 Finalmente ejecutaremos el script desde la linea de comandos. php factura.php y si todo sale bien obtendremos como respuesta. Exito! La Factura numero F001-1, ha sido aceptada Este ejemplo puede encontrarlo en thegreenter/firststeps . Comentarios \u00b6 Pueden unirse a \ud83d\udc4b Greenter Community .","title":"Guia de Inicio"},{"location":"starter/#empezando-con-greenter","text":"","title":"Empezando con Greenter"},{"location":"starter/#instalacion","text":"La forma mas facil de instalar grenter es utilizando composer . composer require greenter/lite","title":"Instalaci\u00f3n"},{"location":"starter/#requerimientos","text":"T\u00e9cnico Certificado en formato PEM Credenciales Clave SOL Bases Para conocer m\u00e1s detalles sobre el proceso de Facturaci\u00f3n Electr\u00f3nica, puede consultar. FE Primer - Gu\u00eda de inicio hecho por Greenter cpe.sunat.gob.pe - P\u00e1gina oficial de SUNAT","title":"Requerimientos"},{"location":"starter/#configuracion","text":"En este ejemplo para firmar los comprobantes electr\u00f3nicos utilizaremos este certificado , y para conectarnos a los servicios de SUNAT, utilizaremos las credenciales Clave SOL que nos proporciona SUNAT en su documentaci\u00f3n: RUC: 20000000001 Usuario: MODDATOS Contrase\u00f1a: moddatos PKCS#12 Si cuenta con un certificado .p12 or .pfx , para convertirlo a formato .PEM necesita la clave y seguir el siguiente ejemplo Crearemos el archivo config.php donde configuraremos la ruta del servicio, el certificado digital y las credenciales (Clave SOL) para conectarnos al servicio BETA de SUNAT: <?php use Greenter\\Ws\\Services\\SunatEndpoints ; use Greenter\\See ; $see = new See (); $see -> setCertificate ( file_get_contents ( __DIR__ . '/certificate.pem' )); $see -> setService ( SunatEndpoints :: FE_BETA ); $see -> setClaveSOL ( '20000000001' , 'MODDATOS' , 'moddatos' ); return $see ; En el ambiente de producci\u00f3n lo recomendable es crear un usuario secundario con solo permisos para comprobantes electr\u00f3nicos.","title":"Configuraci\u00f3n"},{"location":"starter/#factura-electronica","text":"Para este ejemplo se usar\u00e1 la version UBL 2.1 . Crearemos nuestra primera factura electr\u00f3nica, para ello en nuevo archivo factura.php agregaremos el siguiente c\u00f3digo: <?php use Greenter\\Model\\Client\\Client ; use Greenter\\Model\\Company\\Company ; use Greenter\\Model\\Company\\Address ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\SaleDetail ; use Greenter\\Model\\Sale\\Legend ; require __DIR__ . '/vendor/autoload.php' ; $see = require __DIR__ . '/config.php' ; // Cliente $client = new Client (); $client -> setTipoDoc ( '6' ) -> setNumDoc ( '20000000001' ) -> setRznSocial ( 'EMPRESA 1' ); // Emisor $address = new Address (); $address -> setUbigueo ( '150101' ) -> setDepartamento ( 'LIMA' ) -> setProvincia ( 'LIMA' ) -> setDistrito ( 'LIMA' ) -> setUrbanizacion ( 'NONE' ) -> setDireccion ( 'AV LS' ); $company = new Company (); $company -> setRuc ( '20000000001' ) -> setRazonSocial ( 'EMPRESA SAC' ) -> setNombreComercial ( 'EMPRESA' ) -> setAddress ( $address ); // Venta $invoice = ( new Invoice ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) // Catalog. 51 -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '1' ) -> setFechaEmision ( new DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $client ) -> setMtoOperGravadas ( 100.00 ) -> setMtoIGV ( 18.00 ) -> setTotalImpuestos ( 18.00 ) -> setValorVenta ( 100.00 ) -> setSubTotal ( 118.00 ) -> setMtoImpVenta ( 118.00 ) -> setCompany ( $company ); $item = ( new SaleDetail ()) -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 2 ) -> setDescripcion ( 'PRODUCTO 1' ) -> setMtoBaseIgv ( 100 ) -> setPorcentajeIgv ( 18.00 ) // 18% -> setIgv ( 18.00 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 18.00 ) -> setMtoValorVenta ( 100.00 ) -> setMtoValorUnitario ( 50.00 ) -> setMtoPrecioUnitario ( 59.00 ); $legend = ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON 00/100 SOLES' ); $invoice -> setDetails ([ $item ]) -> setLegends ([ $legend ]); $result = $see -> send ( $invoice ); // Guardar XML file_put_contents ( $invoice -> getName () . '.xml' , $see -> getFactory () -> getLastXml ()); if ( ! $result -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $result -> getError ()); exit (); } echo $result -> getCdrResponse () -> getDescription (); // Guardar CDR file_put_contents ( 'R-' . $invoice -> getName () . '.zip' , $result -> getCdrZip ()); Estructura del proyecto / \u251c\u2500\u2500 vendor/ \u251c\u2500\u2500 certificate.pem \u251c\u2500\u2500 composer.json \u251c\u2500\u2500 config.php \u251c\u2500\u2500 factura.php","title":"Factura Electr\u00f3nica"},{"location":"starter/#ejecutar","text":"Finalmente ejecutaremos el script desde la linea de comandos. php factura.php y si todo sale bien obtendremos como respuesta. Exito! La Factura numero F001-1, ha sido aceptada Este ejemplo puede encontrarlo en thegreenter/firststeps .","title":"Ejecutar"},{"location":"starter/#comentarios","text":"Pueden unirse a \ud83d\udc4b Greenter Community .","title":"Comentarios"},{"location":"usage/","text":"Uso de Greenter \u00b6 M\u00e1s opciones que tenemos al utilizar Greenter . Generar XML firmado \u00b6 El ejemplo b\u00e1sico nos mostr\u00f3 como realizar todo el proceso de facturacion con un solo m\u00e9todo send() , pero si necesitamos generar solo el XML firmado, lo cual seria \u00fatil para Boletas de Venta ya que estas no se env\u00edan a SUNAT individualmente. <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\See ; $boleta = ( new Invoice ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '03' ) // C\u00f3digo para Boletas, ver Catalog. 51 -> setSerie ( 'B001' ) -> setCorrelativo ( '1' ) // ... ; $see = new See (); $see -> setCertificate ( file_get_contents ( __DIR__ . '/certificate.pem' )); $xml = $see -> getXmlSigned ( $boleta ); file_put_contents ( '20000000001-03-B001-1.xml' , $xml ); Enviar XML generado \u00b6 Si necesitas enviar un XML previamente generado, debes seguir el siguiente ejemplo. <?php require __DIR__ . '/vendor/autoload.php' ; $see = require __DIR__ . '/config.php' ; $xmlSigned = file_get_contents ( '20000000001-01-F001-1.xml' ); $result = $see -> sendXmlFile ( $xmlSigned ); // $result se maneja del mismo modo que con el metodo send() Resumen diario \u00b6 Para comunicar las boletas de ventas emitidas o anuladas, as\u00ed como las notas de cr\u00e9dito/d\u00e9bito releacionadas, necesita hacerlo mediante un resumen diario . A diferencia del env\u00edo de una factura, donde la respuesta es inmediata, en este documento debemos hacer un consulta adicional para conocer su estado utilizando el numero de ticket . <?php use Greenter\\Model\\Company\\Company ; use Greenter\\Model\\Company\\Address ; use Greenter\\Model\\Sale\\Document ; use Greenter\\Model\\Summary\\Summary ; use Greenter\\Model\\Summary\\SummaryDetail ; $company = new Company (); $company -> setRuc ( '20000000001' ) -> setRazonSocial ( 'EMPRESA SAC' ) -> setNombreComercial ( 'EMPRESA' ) -> setAddress (( new Address ()) -> setUbigueo ( '150101' ) -> setDepartamento ( 'LIMA' ) -> setProvincia ( 'LIMA' ) -> setDistrito ( 'LIMA' ) -> setUrbanizacion ( 'Albar' ) -> setDireccion ( 'AV ROSALES' )); $detail = new SummaryDetail (); $detail -> setTipoDoc ( '07' ) // Nota de Credito -> setSerieNro ( 'B001-4' ) -> setDocReferencia (( new Document ()) // Documento relacionado (Boleta) -> setTipoDoc ( '03' ) -> setNroDoc ( 'B001-1' )) -> setEstado ( '1' ) // Emisi\u00f3n -> setClienteTipo ( '1' ) // Tipo documento identidad: DNI -> setClienteNro ( '00000000' ) // Nro de documento identidad -> setTotal ( 200 ) -> setMtoOperGravadas ( 40 ) -> setMtoOperExoneradas ( 50 ) -> setMtoOperInafectas ( 100 ) -> setMtoIGV ( 7.2 ) -> setMtoISC ( 2.8 ); $detail2 = new SummaryDetail (); $detail2 -> setTipoDoc ( '03' ) // Boleta -> setSerieNro ( 'B001-2' ) -> setEstado ( '3' ) // Anulaci\u00f3n -> setClienteTipo ( '1' ) -> setClienteNro ( '00000000' ) -> setTotal ( 119 ) -> setMtoOperGravadas ( 20 ) -> setMtoOperInafectas ( 24.4 ) -> setMtoOperExoneradas ( 50 ) -> setMtoOtrosCargos ( 21 ) -> setMtoIGV ( 3.6 ); $resumen = new Summary (); $resumen -> setFecGeneracion ( new \\DateTime ( '2020-08-01' )) // Fecha de emisi\u00f3n de las boletas. -> setFecResumen ( new \\DateTime ( '2020-08-02' )) // Fecha de env\u00edo del resumen diario. -> setCorrelativo ( '001' ) // Correlativo, necesario para diferenciar de otros Resumen diario del mismo d\u00eda. -> setCompany ( $company ) -> setDetails ([ $detail , $detail2 ]); $result = $see -> send ( $resumen ); // Guardar XML file_put_contents ( $resumen -> getName () . '.xml' , $see -> getFactory () -> getLastXml ()); if ( ! $result -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $result -> getError ()); exit (); } $ticket = $result -> getTicket (); echo 'Ticket : ' . $ticket . PHP_EOL ; $statusResult = $see -> getStatus ( $ticket ); if ( ! $statusResult -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $statusResult -> getError ()); return ; } echo $statusResult -> getCdrResponse () -> getDescription (); // Guardar CDR file_put_contents ( 'R-' . $resumen -> getName () . '.zip' , $statusResult -> getCdrZip ()); Comunicacion de Baja \u00b6 Para comunicar a SUNAT las anulaciones de facturas y sus notas de cr\u00e9dito/d\u00e9bito releacionadas, necesita hacerlo mediante el documento de comunicaci\u00f3n de baja . El env\u00edo a los servicios de SUNAT se maneja de la misma forma que el resumen diario . <?php use Greenter\\Model\\Voided\\Voided ; use Greenter\\Model\\Voided\\VoidedDetail ; $detail1 = new VoidedDetail (); $detail1 -> setTipoDoc ( '01' ) // Factura -> setSerie ( 'F001' ) -> setCorrelativo ( '1' ) -> setDesMotivoBaja ( 'ERROR EN C\u00c1LCULOS' ); // Motivo por el cual se da de baja. $detail2 = new VoidedDetail (); $detail2 -> setTipoDoc ( '07' ) // Nota de Cr\u00e9dito -> setSerie ( 'FC01' ) -> setCorrelativo ( '2' ) -> setDesMotivoBaja ( 'ERROR DE RUC' ); $cDeBaja = new Voided (); $cDeBaja -> setCorrelativo ( '00001' ) // Correlativo, necesario para diferenciar c. de baja de en un mismo d\u00eda. -> setFecGeneracion ( new \\DateTime ( '2020-08-01' )) // Fecha de emisi\u00f3n de los comprobantes a dar de baja -> setFecComunicacion ( new \\DateTime ( '2020-08-02' )) // Fecha de envio de la C. de baja -> setCompany ( $company ) -> setDetails ([ $detail1 , $detail2 ]); $result = $see -> send ( $cDeBaja ); // Guardar XML file_put_contents ( $cDeBaja -> getName () . '.xml' , $see -> getFactory () -> getLastXml ()); if ( ! $result -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $result -> getError ()); exit (); } $ticket = $result -> getTicket (); echo 'Ticket : ' . $ticket . PHP_EOL ; $statusResult = $see -> getStatus ( $ticket ); if ( ! $statusResult -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $statusResult -> getError ()); return ; } echo $statusResult -> getCdrResponse () -> getDescription (); // Guardar CDR file_put_contents ( 'R-' . $cDeBaja -> getName () . '.zip' , $statusResult -> getCdrZip ()); Anulaci\u00f3n de Boletas Para anular boletas y NCR, NDB relacionadas, se utiliza el resumen diario indicando el campo estado=3","title":"Detalles de uso"},{"location":"usage/#uso-de-greenter","text":"M\u00e1s opciones que tenemos al utilizar Greenter .","title":"Uso de Greenter"},{"location":"usage/#generar-xml-firmado","text":"El ejemplo b\u00e1sico nos mostr\u00f3 como realizar todo el proceso de facturacion con un solo m\u00e9todo send() , pero si necesitamos generar solo el XML firmado, lo cual seria \u00fatil para Boletas de Venta ya que estas no se env\u00edan a SUNAT individualmente. <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\See ; $boleta = ( new Invoice ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '03' ) // C\u00f3digo para Boletas, ver Catalog. 51 -> setSerie ( 'B001' ) -> setCorrelativo ( '1' ) // ... ; $see = new See (); $see -> setCertificate ( file_get_contents ( __DIR__ . '/certificate.pem' )); $xml = $see -> getXmlSigned ( $boleta ); file_put_contents ( '20000000001-03-B001-1.xml' , $xml );","title":"Generar XML firmado"},{"location":"usage/#enviar-xml-generado","text":"Si necesitas enviar un XML previamente generado, debes seguir el siguiente ejemplo. <?php require __DIR__ . '/vendor/autoload.php' ; $see = require __DIR__ . '/config.php' ; $xmlSigned = file_get_contents ( '20000000001-01-F001-1.xml' ); $result = $see -> sendXmlFile ( $xmlSigned ); // $result se maneja del mismo modo que con el metodo send()","title":"Enviar XML generado"},{"location":"usage/#resumen-diario","text":"Para comunicar las boletas de ventas emitidas o anuladas, as\u00ed como las notas de cr\u00e9dito/d\u00e9bito releacionadas, necesita hacerlo mediante un resumen diario . A diferencia del env\u00edo de una factura, donde la respuesta es inmediata, en este documento debemos hacer un consulta adicional para conocer su estado utilizando el numero de ticket . <?php use Greenter\\Model\\Company\\Company ; use Greenter\\Model\\Company\\Address ; use Greenter\\Model\\Sale\\Document ; use Greenter\\Model\\Summary\\Summary ; use Greenter\\Model\\Summary\\SummaryDetail ; $company = new Company (); $company -> setRuc ( '20000000001' ) -> setRazonSocial ( 'EMPRESA SAC' ) -> setNombreComercial ( 'EMPRESA' ) -> setAddress (( new Address ()) -> setUbigueo ( '150101' ) -> setDepartamento ( 'LIMA' ) -> setProvincia ( 'LIMA' ) -> setDistrito ( 'LIMA' ) -> setUrbanizacion ( 'Albar' ) -> setDireccion ( 'AV ROSALES' )); $detail = new SummaryDetail (); $detail -> setTipoDoc ( '07' ) // Nota de Credito -> setSerieNro ( 'B001-4' ) -> setDocReferencia (( new Document ()) // Documento relacionado (Boleta) -> setTipoDoc ( '03' ) -> setNroDoc ( 'B001-1' )) -> setEstado ( '1' ) // Emisi\u00f3n -> setClienteTipo ( '1' ) // Tipo documento identidad: DNI -> setClienteNro ( '00000000' ) // Nro de documento identidad -> setTotal ( 200 ) -> setMtoOperGravadas ( 40 ) -> setMtoOperExoneradas ( 50 ) -> setMtoOperInafectas ( 100 ) -> setMtoIGV ( 7.2 ) -> setMtoISC ( 2.8 ); $detail2 = new SummaryDetail (); $detail2 -> setTipoDoc ( '03' ) // Boleta -> setSerieNro ( 'B001-2' ) -> setEstado ( '3' ) // Anulaci\u00f3n -> setClienteTipo ( '1' ) -> setClienteNro ( '00000000' ) -> setTotal ( 119 ) -> setMtoOperGravadas ( 20 ) -> setMtoOperInafectas ( 24.4 ) -> setMtoOperExoneradas ( 50 ) -> setMtoOtrosCargos ( 21 ) -> setMtoIGV ( 3.6 ); $resumen = new Summary (); $resumen -> setFecGeneracion ( new \\DateTime ( '2020-08-01' )) // Fecha de emisi\u00f3n de las boletas. -> setFecResumen ( new \\DateTime ( '2020-08-02' )) // Fecha de env\u00edo del resumen diario. -> setCorrelativo ( '001' ) // Correlativo, necesario para diferenciar de otros Resumen diario del mismo d\u00eda. -> setCompany ( $company ) -> setDetails ([ $detail , $detail2 ]); $result = $see -> send ( $resumen ); // Guardar XML file_put_contents ( $resumen -> getName () . '.xml' , $see -> getFactory () -> getLastXml ()); if ( ! $result -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $result -> getError ()); exit (); } $ticket = $result -> getTicket (); echo 'Ticket : ' . $ticket . PHP_EOL ; $statusResult = $see -> getStatus ( $ticket ); if ( ! $statusResult -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $statusResult -> getError ()); return ; } echo $statusResult -> getCdrResponse () -> getDescription (); // Guardar CDR file_put_contents ( 'R-' . $resumen -> getName () . '.zip' , $statusResult -> getCdrZip ());","title":"Resumen diario"},{"location":"usage/#comunicacion-de-baja","text":"Para comunicar a SUNAT las anulaciones de facturas y sus notas de cr\u00e9dito/d\u00e9bito releacionadas, necesita hacerlo mediante el documento de comunicaci\u00f3n de baja . El env\u00edo a los servicios de SUNAT se maneja de la misma forma que el resumen diario . <?php use Greenter\\Model\\Voided\\Voided ; use Greenter\\Model\\Voided\\VoidedDetail ; $detail1 = new VoidedDetail (); $detail1 -> setTipoDoc ( '01' ) // Factura -> setSerie ( 'F001' ) -> setCorrelativo ( '1' ) -> setDesMotivoBaja ( 'ERROR EN C\u00c1LCULOS' ); // Motivo por el cual se da de baja. $detail2 = new VoidedDetail (); $detail2 -> setTipoDoc ( '07' ) // Nota de Cr\u00e9dito -> setSerie ( 'FC01' ) -> setCorrelativo ( '2' ) -> setDesMotivoBaja ( 'ERROR DE RUC' ); $cDeBaja = new Voided (); $cDeBaja -> setCorrelativo ( '00001' ) // Correlativo, necesario para diferenciar c. de baja de en un mismo d\u00eda. -> setFecGeneracion ( new \\DateTime ( '2020-08-01' )) // Fecha de emisi\u00f3n de los comprobantes a dar de baja -> setFecComunicacion ( new \\DateTime ( '2020-08-02' )) // Fecha de envio de la C. de baja -> setCompany ( $company ) -> setDetails ([ $detail1 , $detail2 ]); $result = $see -> send ( $cDeBaja ); // Guardar XML file_put_contents ( $cDeBaja -> getName () . '.xml' , $see -> getFactory () -> getLastXml ()); if ( ! $result -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $result -> getError ()); exit (); } $ticket = $result -> getTicket (); echo 'Ticket : ' . $ticket . PHP_EOL ; $statusResult = $see -> getStatus ( $ticket ); if ( ! $statusResult -> isSuccess ()) { // Si hubo error al conectarse al servicio de SUNAT. var_dump ( $statusResult -> getError ()); return ; } echo $statusResult -> getCdrResponse () -> getDescription (); // Guardar CDR file_put_contents ( 'R-' . $cDeBaja -> getName () . '.zip' , $statusResult -> getCdrZip ()); Anulaci\u00f3n de Boletas Para anular boletas y NCR, NDB relacionadas, se utiliza el resumen diario indicando el campo estado=3","title":"Comunicacion de Baja"},{"location":"examples/anticipo/","text":"Factura con Deducci\u00f3n de Anticipos \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\Prepayment ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setDescuentos ([( new Charge ()) -> setCodTipo ( '04' ) // catalog. 53 -> setFactor ( 1 ) -> setMonto ( 100 ) // anticipo -> setMontoBase ( 100 ) ]) -> setMtoOperGravadas ( 100 ) -> setMtoIGV ( 18 ) -> setValorVenta ( 200 ) -> setTotalImpuestos ( 18 ) -> setMtoImpVenta ( 118 ) -> setAnticipos ([ ( new Prepayment ()) -> setTipoDocRel ( '02' ) // catalog. 12 -> setNroDocRel ( 'F001-111' ) -> setTotal ( 100 ) ]) -> setTotalAnticipos ( 100 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 118 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ) ]);","title":"F. Anticipos"},{"location":"examples/anticipo/#factura-con-deduccion-de-anticipos","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura con Deducci\u00f3n de Anticipos"},{"location":"examples/anticipo/#codigo","text":"<?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\Prepayment ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setDescuentos ([( new Charge ()) -> setCodTipo ( '04' ) // catalog. 53 -> setFactor ( 1 ) -> setMonto ( 100 ) // anticipo -> setMontoBase ( 100 ) ]) -> setMtoOperGravadas ( 100 ) -> setMtoIGV ( 18 ) -> setValorVenta ( 200 ) -> setTotalImpuestos ( 18 ) -> setMtoImpVenta ( 118 ) -> setAnticipos ([ ( new Prepayment ()) -> setTipoDocRel ( '02' ) // catalog. 12 -> setNroDocRel ( 'F001-111' ) -> setTotal ( 100 ) ]) -> setTotalAnticipos ( 100 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 118 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ) ]);","title":"C\u00f3digo"},{"location":"examples/boleta/","text":"Boleta de Venta \u00b6 Este ejemplo muestra la creaci\u00f3n del XML para una boleta de venta electr\u00f3nica, empleando el est\u00e1ndar UBL 2.1 Info Seg\u00fan normativa de SUNAT, las boletas electronicas se envian mediante el resumen diario. Para prop\u00f3sitos de prueba y validar el xml generado puede hacer uso del servicio beta. Ejemplo \u00b6 <?php use Greenter\\Model\\Client\\Client ; use Greenter\\Model\\Company\\Company ; use Greenter\\Model\\Company\\Address ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\SaleDetail ; use Greenter\\Model\\Sale\\Legend ; require __DIR__ . '/vendor/autoload.php' ; $see = require __DIR__ . '/config.php' ; // Cliente $client = new Client (); $client -> setTipoDoc ( '1' ) -> setNumDoc ( '46712369' ) -> setRznSocial ( 'MARIA RAMOS ARTEAGA' ); // Emisor $address = new Address (); $address -> setUbigueo ( '150101' ) -> setDepartamento ( 'LIMA' ) -> setProvincia ( 'LIMA' ) -> setDistrito ( 'LIMA' ) -> setUrbanizacion ( '-' ) -> setDireccion ( 'AV LOS GERUNDIOS' ); $company = new Company (); $company -> setRuc ( '20000000001' ) -> setRazonSocial ( 'EMPRESA SAC' ) -> setNombreComercial ( 'EMPRESA' ) -> setAddress ( $address ); // Venta $invoice = ( new Invoice ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) // Catalog. 51 -> setTipoDoc ( '01' ) -> setSerie ( 'B001' ) -> setCorrelativo ( '1' ) -> setFechaEmision ( new DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $client ) -> setMtoOperGravadas ( 100.00 ) -> setMtoIGV ( 18.00 ) -> setTotalImpuestos ( 18.00 ) -> setValorVenta ( 100.00 ) -> setSubTotal ( 118.00 ) -> setMtoImpVenta ( 118.00 ) -> setCompany ( $company ); $item = ( new SaleDetail ()) -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 2 ) -> setDescripcion ( 'PRODUCTO 1' ) -> setMtoBaseIgv ( 100 ) -> setPorcentajeIgv ( 18.00 ) // 18% -> setIgv ( 18.00 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 18.00 ) -> setMtoValorVenta ( 100.00 ) -> setMtoValorUnitario ( 50.00 ) -> setMtoPrecioUnitario ( 59.00 ); $legend = ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON 00/100 SOLES' ); $invoice -> setDetails ([ $item ]) -> setLegends ([ $legend ]); $xml = $see -> getXmlSigned ( $invoice ); // Guardar XML file_put_contents ( $invoice -> getName () . '.xml' , $xml );","title":"Boleta de Venta"},{"location":"examples/boleta/#boleta-de-venta","text":"Este ejemplo muestra la creaci\u00f3n del XML para una boleta de venta electr\u00f3nica, empleando el est\u00e1ndar UBL 2.1 Info Seg\u00fan normativa de SUNAT, las boletas electronicas se envian mediante el resumen diario. Para prop\u00f3sitos de prueba y validar el xml generado puede hacer uso del servicio beta.","title":"Boleta de Venta"},{"location":"examples/boleta/#ejemplo","text":"<?php use Greenter\\Model\\Client\\Client ; use Greenter\\Model\\Company\\Company ; use Greenter\\Model\\Company\\Address ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\SaleDetail ; use Greenter\\Model\\Sale\\Legend ; require __DIR__ . '/vendor/autoload.php' ; $see = require __DIR__ . '/config.php' ; // Cliente $client = new Client (); $client -> setTipoDoc ( '1' ) -> setNumDoc ( '46712369' ) -> setRznSocial ( 'MARIA RAMOS ARTEAGA' ); // Emisor $address = new Address (); $address -> setUbigueo ( '150101' ) -> setDepartamento ( 'LIMA' ) -> setProvincia ( 'LIMA' ) -> setDistrito ( 'LIMA' ) -> setUrbanizacion ( '-' ) -> setDireccion ( 'AV LOS GERUNDIOS' ); $company = new Company (); $company -> setRuc ( '20000000001' ) -> setRazonSocial ( 'EMPRESA SAC' ) -> setNombreComercial ( 'EMPRESA' ) -> setAddress ( $address ); // Venta $invoice = ( new Invoice ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) // Catalog. 51 -> setTipoDoc ( '01' ) -> setSerie ( 'B001' ) -> setCorrelativo ( '1' ) -> setFechaEmision ( new DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $client ) -> setMtoOperGravadas ( 100.00 ) -> setMtoIGV ( 18.00 ) -> setTotalImpuestos ( 18.00 ) -> setValorVenta ( 100.00 ) -> setSubTotal ( 118.00 ) -> setMtoImpVenta ( 118.00 ) -> setCompany ( $company ); $item = ( new SaleDetail ()) -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 2 ) -> setDescripcion ( 'PRODUCTO 1' ) -> setMtoBaseIgv ( 100 ) -> setPorcentajeIgv ( 18.00 ) // 18% -> setIgv ( 18.00 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 18.00 ) -> setMtoValorVenta ( 100.00 ) -> setMtoValorUnitario ( 50.00 ) -> setMtoPrecioUnitario ( 59.00 ); $legend = ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON 00/100 SOLES' ); $invoice -> setDetails ([ $item ]) -> setLegends ([ $legend ]); $xml = $see -> getXmlSigned ( $invoice ); // Guardar XML file_put_contents ( $invoice -> getName () . '.xml' , $xml );","title":"Ejemplo"},{"location":"examples/contingencia/","text":"Contingencia \u00b6 Existen situaciones adversas por la que un emisor electr\u00f3nico no puede emitir comprobantes electronicos, en ese caso SUNAT les da la posibilidad de emitir un comprobante fisico, como anteriormente se realizaba. Para informar a SUNAT de estos comprobantes, a partir del 01-09-2018 se envi\u00e1 de la misma forma como se hace con los comprobantes electr\u00f3nicos. Las boletas por contingencia se siguen enviando empleando el resumen diario de boletas. Representaci\u00f3n Impresa \u00b6 La representaci\u00f3n impresa de los comprobantes de contingencia deben incluir algunas leyendas, el primero: \"Emisor electr\u00f3nico obligado\" y otra dependiendo del tipo de comprobante Tipo documento Leyenda Factura y Boleta \"Comprobante de Pago emitido en contingencia\" Nota de Cr\u00e9dito \"Nota de Cr\u00e9dito emitida en contingencia\" Nota de D\u00e9bito \"Nota de D\u00e9dito emitida en contingencia\" C. de Retenci\u00f3n \"Comprobante de Retenci\u00f3n emitido en contingencia\" C. de Percepci\u00f3n \"Comprobante de Percepci\u00f3n emitido en contingencia\" Factura Electr\u00f3nica \u00b6 El cambio con respecto a la emision normal de un comprobante electr\u00f3nico es la serie, que es num\u00e9rica. <?php //... $invoice -> setSerie ( '0001' ); //... Referencia \u00b6 Procedimiento de contingencia - SUNAT","title":"Contingencia"},{"location":"examples/contingencia/#contingencia","text":"Existen situaciones adversas por la que un emisor electr\u00f3nico no puede emitir comprobantes electronicos, en ese caso SUNAT les da la posibilidad de emitir un comprobante fisico, como anteriormente se realizaba. Para informar a SUNAT de estos comprobantes, a partir del 01-09-2018 se envi\u00e1 de la misma forma como se hace con los comprobantes electr\u00f3nicos. Las boletas por contingencia se siguen enviando empleando el resumen diario de boletas.","title":"Contingencia"},{"location":"examples/contingencia/#representacion-impresa","text":"La representaci\u00f3n impresa de los comprobantes de contingencia deben incluir algunas leyendas, el primero: \"Emisor electr\u00f3nico obligado\" y otra dependiendo del tipo de comprobante Tipo documento Leyenda Factura y Boleta \"Comprobante de Pago emitido en contingencia\" Nota de Cr\u00e9dito \"Nota de Cr\u00e9dito emitida en contingencia\" Nota de D\u00e9bito \"Nota de D\u00e9dito emitida en contingencia\" C. de Retenci\u00f3n \"Comprobante de Retenci\u00f3n emitido en contingencia\" C. de Percepci\u00f3n \"Comprobante de Percepci\u00f3n emitido en contingencia\"","title":"Representaci\u00f3n Impresa"},{"location":"examples/contingencia/#factura-electronica","text":"El cambio con respecto a la emision normal de un comprobante electr\u00f3nico es la serie, que es num\u00e9rica. <?php //... $invoice -> setSerie ( '0001' ); //...","title":"Factura Electr\u00f3nica"},{"location":"examples/contingencia/#referencia","text":"Procedimiento de contingencia - SUNAT","title":"Referencia"},{"location":"examples/descuento-linea/","text":"Factura con Descuentos \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Charge ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 180 ) -> setMtoIGV ( 32.40 ) -> setTotalImpuestos ( 32.40 ) -> setValorVenta ( 180 ) -> setMtoImpVenta ( 212.40 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setDescuentos ([ ( new Charge ()) -> setCodTipo ( '00' ) // Catalog. 53 -> setMontoBase ( 200 ) -> setFactor ( 0.10 ) -> setMonto ( 20 ) ]) -> setMtoValorVenta ( 180 ) -> setMtoBaseIgv ( 180 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 32.40 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 32.40 ) -> setMtoPrecioUnitario ( 106.3 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ) ]);","title":"F. Descuentos"},{"location":"examples/descuento-linea/#factura-con-descuentos","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura con Descuentos"},{"location":"examples/descuento-linea/#codigo","text":"<?php use Greenter\\Model\\Sale\\Charge ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 180 ) -> setMtoIGV ( 32.40 ) -> setTotalImpuestos ( 32.40 ) -> setValorVenta ( 180 ) -> setMtoImpVenta ( 212.40 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setDescuentos ([ ( new Charge ()) -> setCodTipo ( '00' ) // Catalog. 53 -> setMontoBase ( 200 ) -> setFactor ( 0.10 ) -> setMonto ( 20 ) ]) -> setMtoValorVenta ( 180 ) -> setMtoBaseIgv ( 180 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 32.40 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 32.40 ) -> setMtoPrecioUnitario ( 106.3 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ) ]);","title":"C\u00f3digo"},{"location":"examples/detraccion/","text":"Factura con Detracciones \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Detraction ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '1001' ) // detracci\u00f3n -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 200 ) -> setMtoIGV ( 36 ) -> setValorVenta ( 200 ) -> setTotalImpuestos ( 36 ) -> setMtoImpVenta ( 236 ) -> setDetraccion ( // MONEDA SIEMPRE EN SOLES ( new Detraction ()) // Carnes y despojos comestibles -> setCodBienDetraccion ( '014' ) // catalog. 54 // Deposito en cuenta -> setCodMedioPago ( '001' ) // catalog. 59 -> setCtaBanco ( '0004-3342343243' ) -> setPercent ( 4.00 ) -> setMount ( 9.44 ) ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 118 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ), ( new Legend ()) -> setCode ( '2006' ) -> setValue ( 'Operaci\u00f3n sujeta a detracci\u00f3n' ) ]);","title":"F. Detracci\u00f3n"},{"location":"examples/detraccion/#factura-con-detracciones","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura con Detracciones"},{"location":"examples/detraccion/#codigo","text":"<?php use Greenter\\Model\\Sale\\Detraction ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '1001' ) // detracci\u00f3n -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 200 ) -> setMtoIGV ( 36 ) -> setValorVenta ( 200 ) -> setTotalImpuestos ( 36 ) -> setMtoImpVenta ( 236 ) -> setDetraccion ( // MONEDA SIEMPRE EN SOLES ( new Detraction ()) // Carnes y despojos comestibles -> setCodBienDetraccion ( '014' ) // catalog. 54 // Deposito en cuenta -> setCodMedioPago ( '001' ) // catalog. 59 -> setCtaBanco ( '0004-3342343243' ) -> setPercent ( 4.00 ) -> setMount ( 9.44 ) ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 118 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ), ( new Legend ()) -> setCode ( '2006' ) -> setValue ( 'Operaci\u00f3n sujeta a detracci\u00f3n' ) ]);","title":"C\u00f3digo"},{"location":"examples/exonerada/","text":"Factura Exonerada \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setFecVencimiento ( new \\DateTime ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperExoneradas ( 200 ) -> setMtoIGV ( 0 ) -> setTotalImpuestos ( 0 ) -> setValorVenta ( 200 ) -> setMtoImpVenta ( 200 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 0 ) -> setTipAfeIgv ( '20' ) -> setTotalImpuestos ( 0 ) -> setMtoPrecioUnitario ( 100 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS CON OO/100 SOLES' ) ]);","title":"F. Exonerada"},{"location":"examples/exonerada/#factura-exonerada","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura Exonerada"},{"location":"examples/exonerada/#codigo","text":"<?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setFecVencimiento ( new \\DateTime ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperExoneradas ( 200 ) -> setMtoIGV ( 0 ) -> setTotalImpuestos ( 0 ) -> setValorVenta ( 200 ) -> setMtoImpVenta ( 200 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 0 ) -> setTipAfeIgv ( '20' ) -> setTotalImpuestos ( 0 ) -> setMtoPrecioUnitario ( 100 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS CON OO/100 SOLES' ) ]);","title":"C\u00f3digo"},{"location":"examples/exportacion/","text":"Factura Exportaci\u00f3n \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Client\\Client ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0200' ) // Tipo Operacion: exportaction -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'USD' ) -> setCompany ( $this -> getCompany ()) -> setClient (( new Client ()) // Cliente: extranjeria o sin documentos -> setTipoDoc ( '0' ) -> setNumDoc ( '-' ) -> setRznSocial ( 'EXTRANJERO' ) ) -> setMtoOperExportacion ( 100 ) -> setMtoIGV ( 0 ) -> setTotalImpuestos ( 0 ) -> setValorVenta ( 100 ) -> setMtoImpVenta ( 100 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setCodProdSunat ( '43231513' ) // Codigo Producto Sunat, requerido. -> setUnidad ( 'KG' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 50 ) -> setMtoValorVenta ( 100 ) -> setMtoBaseIgv ( 100 ) -> setPorcentajeIgv ( 0 ) -> setIgv ( 0 ) -> setTipAfeIgv ( '40' ) -> setTotalImpuestos ( 0 ) -> setMtoPrecioUnitario ( 50 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON CIEN CON OO/100 SOLES' ) ]);","title":"F. Exportaci\u00f3n"},{"location":"examples/exportacion/#factura-exportacion","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura Exportaci\u00f3n"},{"location":"examples/exportacion/#codigo","text":"<?php use Greenter\\Model\\Client\\Client ; use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0200' ) // Tipo Operacion: exportaction -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'USD' ) -> setCompany ( $this -> getCompany ()) -> setClient (( new Client ()) // Cliente: extranjeria o sin documentos -> setTipoDoc ( '0' ) -> setNumDoc ( '-' ) -> setRznSocial ( 'EXTRANJERO' ) ) -> setMtoOperExportacion ( 100 ) -> setMtoIGV ( 0 ) -> setTotalImpuestos ( 0 ) -> setValorVenta ( 100 ) -> setMtoImpVenta ( 100 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setCodProdSunat ( '43231513' ) // Codigo Producto Sunat, requerido. -> setUnidad ( 'KG' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 50 ) -> setMtoValorVenta ( 100 ) -> setMtoBaseIgv ( 100 ) -> setPorcentajeIgv ( 0 ) -> setIgv ( 0 ) -> setTipAfeIgv ( '40' ) -> setTotalImpuestos ( 0 ) -> setMtoPrecioUnitario ( 50 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON CIEN CON OO/100 SOLES' ) ]);","title":"C\u00f3digo"},{"location":"examples/factura/","text":"Factura \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 $invoice = new Invoice(); $invoice ->setFecVencimiento(new \\DateTime()) ->setMtoOperGratuitas(12) ->setSumDsctoGlobal(12) ->setMtoDescuentos(23) ->setSumOtrosDescuentos(24) ->setTipoOperacion('2') ->setPerception( (new SalePerception()) ->setCodReg('01') ->setPorcentaje(2.00) ->setMto(2) ->setMtoBase(3) ->setMtoTotal(4) )->setCompra('001-12112') ->setDetraccion( // MONEDA SIEMPRE EN SOLES (new Detraction()) // Carnes y despojos comestibles ->setCodBienDetraccion('014') // catalog. 54 // Deposito en cuenta ->setCodMedioPago('001') // catalog. 59 ->setCtaBanco('0004-3342343243') ->setPercent(4.00) ->setMount(9.44) )->setGuiaEmbebida( (new EmbededDespatch()) ->setLlegada(new Direction('070101', 'AV. REPUBLICA DE ARGENTINA N? 2976 URB.')) ->setPartida(new Direction('070101', 'AV OSCAR R BENAVIDES No 5915 PE')) ->setTransportista( (new Client()) ->setTipoDoc('6') ->setNumDoc('20100006376') ->setRznSocial('TRANS SAC') )->setNroLicencia('1111111111') ->setTranspPlaca('B9Y-778') ->setTranspCodeAuth('112121') ->setTranspMarca('Scania') ->setModTraslado('01') ->setUndPesoBruto('KGM') ->setPesoBruto(2020.23) )->setAnticipos([(new Prepayment()) ->setTotal(100) ->setTipoDocRel('02') ->setNroDocRel('F001-21'), (new Prepayment())->setTotal(200) ->setTipoDocRel('02') ->setNroDocRel('F001-23') ])->setTotalAnticipos(300) ->setRelDocs([(new Document()) ->setTipoDoc('01') ->setNroDoc('F001-123') ]) ->setGuias([(new Document()) ->setTipoDoc('09') ->setNroDoc('T001-1') ]) ->setTipoDoc('01') ->setSerie('F001') ->setCorrelativo('123') ->setFechaEmision(new \\DateTime()) ->setTipoMoneda('PEN') ->setClient($this->shared->getClient()) ->setMtoOperGravadas(200) ->setMtoOperExoneradas(0) ->setMtoOperInafectas(0) ->setMtoIGV(36) ->setMtoISC(2) ->setSumOtrosCargos(12) ->setMtoOtrosTributos(1) ->setTotalImpuestos(39) ->setValorVenta(200) ->setSubTotal(236) ->setRedondeo(0.02) ->setMtoImpVenta(236) ->setCompany($this->shared->getCompany()) ->setDetails([(new SaleDetail()) ->setCodProducto('C023') ->setUnidad('NIU') ->setCantidad(2) ->setDescripcion('PROD 1') ->setMtoBaseIgv(100) ->setPorcentajeIgv(18.0) ->setIgv(18) ->setMtoBaseIsc(60) ->setPorcentajeIsc(0.50) ->setIsc(3) ->setTipSisIsc('3') ->setTipAfeIgv('10') ->setTotalImpuestos(21) ->setMtoValorVenta(100) ->setMtoValorUnitario(50.44556677881233) ->setMtoPrecioUnitario(56.3215) , (new SaleDetail()) ->setCodProducto('C02') ->setCodProdSunat('001') ->setCodProdGS1('123456789') ->setUnidad('NIU') ->setCantidad(2) ->setDescripcion('PROD 2') ->setDescuento(1) ->setDescuentos([ (new Charge()) ->setCodTipo('00') ->setFactor(5.00) ->setMontoBase(100) ->setMonto(5) ]) ->setMtoBaseIgv(100) ->setPorcentajeIgv(18) ->setIgv(18) ->setTotalImpuestos(18) ->setTipAfeIgv('10') ->setMtoValorVenta(100) ->setMtoValorGratuito(2.32) ->setMtoValorUnitario(50.777777) ])->setLegends([ (new Legend()) ->setCode('1000') ->setValue('SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES'), (new Legend()) ->setCode('2006') ->setValue('Operaci\u00f3n sujeta a detracci\u00f3n') ]);","title":"Factura"},{"location":"examples/factura/#factura","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura"},{"location":"examples/factura/#codigo","text":"$invoice = new Invoice(); $invoice ->setFecVencimiento(new \\DateTime()) ->setMtoOperGratuitas(12) ->setSumDsctoGlobal(12) ->setMtoDescuentos(23) ->setSumOtrosDescuentos(24) ->setTipoOperacion('2') ->setPerception( (new SalePerception()) ->setCodReg('01') ->setPorcentaje(2.00) ->setMto(2) ->setMtoBase(3) ->setMtoTotal(4) )->setCompra('001-12112') ->setDetraccion( // MONEDA SIEMPRE EN SOLES (new Detraction()) // Carnes y despojos comestibles ->setCodBienDetraccion('014') // catalog. 54 // Deposito en cuenta ->setCodMedioPago('001') // catalog. 59 ->setCtaBanco('0004-3342343243') ->setPercent(4.00) ->setMount(9.44) )->setGuiaEmbebida( (new EmbededDespatch()) ->setLlegada(new Direction('070101', 'AV. REPUBLICA DE ARGENTINA N? 2976 URB.')) ->setPartida(new Direction('070101', 'AV OSCAR R BENAVIDES No 5915 PE')) ->setTransportista( (new Client()) ->setTipoDoc('6') ->setNumDoc('20100006376') ->setRznSocial('TRANS SAC') )->setNroLicencia('1111111111') ->setTranspPlaca('B9Y-778') ->setTranspCodeAuth('112121') ->setTranspMarca('Scania') ->setModTraslado('01') ->setUndPesoBruto('KGM') ->setPesoBruto(2020.23) )->setAnticipos([(new Prepayment()) ->setTotal(100) ->setTipoDocRel('02') ->setNroDocRel('F001-21'), (new Prepayment())->setTotal(200) ->setTipoDocRel('02') ->setNroDocRel('F001-23') ])->setTotalAnticipos(300) ->setRelDocs([(new Document()) ->setTipoDoc('01') ->setNroDoc('F001-123') ]) ->setGuias([(new Document()) ->setTipoDoc('09') ->setNroDoc('T001-1') ]) ->setTipoDoc('01') ->setSerie('F001') ->setCorrelativo('123') ->setFechaEmision(new \\DateTime()) ->setTipoMoneda('PEN') ->setClient($this->shared->getClient()) ->setMtoOperGravadas(200) ->setMtoOperExoneradas(0) ->setMtoOperInafectas(0) ->setMtoIGV(36) ->setMtoISC(2) ->setSumOtrosCargos(12) ->setMtoOtrosTributos(1) ->setTotalImpuestos(39) ->setValorVenta(200) ->setSubTotal(236) ->setRedondeo(0.02) ->setMtoImpVenta(236) ->setCompany($this->shared->getCompany()) ->setDetails([(new SaleDetail()) ->setCodProducto('C023') ->setUnidad('NIU') ->setCantidad(2) ->setDescripcion('PROD 1') ->setMtoBaseIgv(100) ->setPorcentajeIgv(18.0) ->setIgv(18) ->setMtoBaseIsc(60) ->setPorcentajeIsc(0.50) ->setIsc(3) ->setTipSisIsc('3') ->setTipAfeIgv('10') ->setTotalImpuestos(21) ->setMtoValorVenta(100) ->setMtoValorUnitario(50.44556677881233) ->setMtoPrecioUnitario(56.3215) , (new SaleDetail()) ->setCodProducto('C02') ->setCodProdSunat('001') ->setCodProdGS1('123456789') ->setUnidad('NIU') ->setCantidad(2) ->setDescripcion('PROD 2') ->setDescuento(1) ->setDescuentos([ (new Charge()) ->setCodTipo('00') ->setFactor(5.00) ->setMontoBase(100) ->setMonto(5) ]) ->setMtoBaseIgv(100) ->setPorcentajeIgv(18) ->setIgv(18) ->setTotalImpuestos(18) ->setTipAfeIgv('10') ->setMtoValorVenta(100) ->setMtoValorGratuito(2.32) ->setMtoValorUnitario(50.777777) ])->setLegends([ (new Legend()) ->setCode('1000') ->setValue('SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES'), (new Legend()) ->setCode('2006') ->setValue('Operaci\u00f3n sujeta a detracci\u00f3n') ]);","title":"C\u00f3digo"},{"location":"examples/gratuita/","text":"Factura Gratuita \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGratuitas ( 200 ) -> setMtoIGVGratuitas ( 36 ) -> setTotalImpuestos ( 0 ) -> setValorVenta ( 0 ) -> setSubTotal ( 0 ) -> setMtoImpVenta ( 0 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 0 ) -> setMtoValorGratuito ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '11' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 0 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1002' ) -> setValue ( 'TRANSFERENCIA GRATUITA DE UN BIEN Y/O SERVICIO PRESTADO GRATUITAMENTE' ) ]);","title":"F. Gratuita"},{"location":"examples/gratuita/#factura-gratuita","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura Gratuita"},{"location":"examples/gratuita/#codigo","text":"<?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGratuitas ( 200 ) -> setMtoIGVGratuitas ( 36 ) -> setTotalImpuestos ( 0 ) -> setValorVenta ( 0 ) -> setSubTotal ( 0 ) -> setMtoImpVenta ( 0 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 0 ) -> setMtoValorGratuito ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '11' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 0 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1002' ) -> setValue ( 'TRANSFERENCIA GRATUITA DE UN BIEN Y/O SERVICIO PRESTADO GRATUITAMENTE' ) ]);","title":"C\u00f3digo"},{"location":"examples/icbper/","text":"Factura con ICBPER \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setFecVencimiento ( new \\DateTime ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 200.20 ) -> setMtoIGV ( 36.04 ) -> setIcbper ( 0.40 ) -> setTotalImpuestos ( 36.44 ) -> setValorVenta ( 200.20 ) -> setSubTotal ( 236.64 ) -> setRedondeo ( 0.36 ) -> setMtoImpVenta ( 237 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 2 ) -> setDescripcion ( 'PRODUCTO 1' ) -> setMtoBaseIgv ( 200.00 ) -> setPorcentajeIgv ( 18.0 ) -> setIgv ( 36 ) -> setTotalImpuestos ( 36 ) -> setTipAfeIgv ( '10' ) -> setMtoValorVenta ( 200 ) -> setMtoValorUnitario ( 100 ) -> setMtoPrecioUnitario ( 118 ); $bolsa = new SaleDetail (); $bolsa -> setCodProducto ( 'P002' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 4 ) -> setDescripcion ( 'BOLSA DE PLASTICO' ) -> setMtoValorUnitario ( 0.05 ) -> setMtoPrecioUnitario ( 0.059 ) -> setMtoValorVenta ( 0.20 ) -> setTipAfeIgv ( '10' ) -> setMtoBaseIgv ( 0.20 ) -> setPorcentajeIgv ( 18.0 ) -> setIgv ( 0.04 ) -> setIcbper ( 0.40 ) // (cantidad)*(factor ICBPER) -> setFactorIcbper ( 0.10 ) -> setTotalImpuestos ( 0.44 ) ; $invoice -> setDetails ([ $detail , $bolsa ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SIETE CON 00/100 SOLES' ) ]); Monto ICBPER \u00b6 La cuant\u00eda del impuesto al consumo de las bolsas de pl\u00e1stico es gradual y se aplica por la adquisici\u00f3n unitaria de bolsas de pl\u00e1stico, de acuerdo con el siguiente cronograma: Monto A\u00f1o S/ 0.10 2019 S/ 0.20 2020 S/ 0.30 2021 S/ 0.40 2022 S/ 0.50 2023+","title":"F. ICBPER"},{"location":"examples/icbper/#factura-con-icbper","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura con ICBPER"},{"location":"examples/icbper/#codigo","text":"<?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; $invoice = new Invoice (); $invoice -> setFecVencimiento ( new \\DateTime ()) -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '0101' ) -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 200.20 ) -> setMtoIGV ( 36.04 ) -> setIcbper ( 0.40 ) -> setTotalImpuestos ( 36.44 ) -> setValorVenta ( 200.20 ) -> setSubTotal ( 236.64 ) -> setRedondeo ( 0.36 ) -> setMtoImpVenta ( 237 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 2 ) -> setDescripcion ( 'PRODUCTO 1' ) -> setMtoBaseIgv ( 200.00 ) -> setPorcentajeIgv ( 18.0 ) -> setIgv ( 36 ) -> setTotalImpuestos ( 36 ) -> setTipAfeIgv ( '10' ) -> setMtoValorVenta ( 200 ) -> setMtoValorUnitario ( 100 ) -> setMtoPrecioUnitario ( 118 ); $bolsa = new SaleDetail (); $bolsa -> setCodProducto ( 'P002' ) -> setUnidad ( 'NIU' ) -> setCantidad ( 4 ) -> setDescripcion ( 'BOLSA DE PLASTICO' ) -> setMtoValorUnitario ( 0.05 ) -> setMtoPrecioUnitario ( 0.059 ) -> setMtoValorVenta ( 0.20 ) -> setTipAfeIgv ( '10' ) -> setMtoBaseIgv ( 0.20 ) -> setPorcentajeIgv ( 18.0 ) -> setIgv ( 0.04 ) -> setIcbper ( 0.40 ) // (cantidad)*(factor ICBPER) -> setFactorIcbper ( 0.10 ) -> setTotalImpuestos ( 0.44 ) ; $invoice -> setDetails ([ $detail , $bolsa ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SIETE CON 00/100 SOLES' ) ]);","title":"C\u00f3digo"},{"location":"examples/icbper/#monto-icbper","text":"La cuant\u00eda del impuesto al consumo de las bolsas de pl\u00e1stico es gradual y se aplica por la adquisici\u00f3n unitaria de bolsas de pl\u00e1stico, de acuerdo con el siguiente cronograma: Monto A\u00f1o S/ 0.10 2019 S/ 0.20 2020 S/ 0.30 2021 S/ 0.40 2022 S/ 0.50 2023+","title":"Monto ICBPER"},{"location":"examples/percepcion/","text":"Factura con Percepci\u00f3n \u00b6 Las lineas resaltadas son propias de este modelo de factura. C\u00f3digo \u00b6 <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; use Greenter\\Model\\Sale\\SalePerception ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '2001' ) // Percepciones -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 200 ) -> setMtoIGV ( 36 ) -> setTotalImpuestos ( 36 ) -> setValorVenta ( 200 ) -> setMtoImpVenta ( 236 ) -> setPerception (( new SalePerception ()) -> setCodReg ( '51' ) -> setPorcentaje ( 0.02 ) -> setMtoBase ( 200 ) -> setMto ( 4.00 ) -> setMtoTotal ( 204.00 )) -> setSumOtrosCargos ( 4.00 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 118 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ), ( new Legend ()) -> setCode ( '2000' ) -> setValue ( 'COMPROBANTE DE PERCEPCI\u00d3N' ) ]);","title":"F. Percepci\u00f3n"},{"location":"examples/percepcion/#factura-con-percepcion","text":"Las lineas resaltadas son propias de este modelo de factura.","title":"Factura con Percepci\u00f3n"},{"location":"examples/percepcion/#codigo","text":"<?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Model\\Sale\\Legend ; use Greenter\\Model\\Sale\\SaleDetail ; use Greenter\\Model\\Sale\\SalePerception ; $invoice = new Invoice (); $invoice -> setUblVersion ( '2.1' ) -> setTipoOperacion ( '2001' ) // Percepciones -> setTipoDoc ( '01' ) -> setSerie ( 'F001' ) -> setCorrelativo ( '123' ) -> setFechaEmision ( new \\DateTime ()) -> setTipoMoneda ( 'PEN' ) -> setClient ( $this -> getClient ()) -> setCompany ( $this -> getCompany ()) -> setMtoOperGravadas ( 200 ) -> setMtoIGV ( 36 ) -> setTotalImpuestos ( 36 ) -> setValorVenta ( 200 ) -> setMtoImpVenta ( 236 ) -> setPerception (( new SalePerception ()) -> setCodReg ( '51' ) -> setPorcentaje ( 0.02 ) -> setMtoBase ( 200 ) -> setMto ( 4.00 ) -> setMtoTotal ( 204.00 )) -> setSumOtrosCargos ( 4.00 ); $detail = new SaleDetail (); $detail -> setCodProducto ( 'P001' ) -> setUnidad ( 'NIU' ) -> setDescripcion ( 'PROD 1' ) -> setCantidad ( 2 ) -> setMtoValorUnitario ( 100 ) -> setMtoValorVenta ( 200 ) -> setMtoBaseIgv ( 200 ) -> setPorcentajeIgv ( 18 ) -> setIgv ( 36 ) -> setTipAfeIgv ( '10' ) -> setTotalImpuestos ( 36 ) -> setMtoPrecioUnitario ( 118 ) ; $invoice -> setDetails ([ $detail ]) -> setLegends ([ ( new Legend ()) -> setCode ( '1000' ) -> setValue ( 'SON DOSCIENTOS TREINTA Y SEIS CON OO/100 SOLES' ), ( new Legend ()) -> setCode ( '2000' ) -> setValue ( 'COMPROBANTE DE PERCEPCI\u00d3N' ) ]);","title":"C\u00f3digo"},{"location":"packages/report/","text":"Greenter Report \u00b6 Para elaborar una representaci\u00f3n impresa se dispone de los formatos: HTML y PDF. Instalar \u00b6 composer require greenter/report Documentos \u00b6 Lista de documentos con reporte disponible. Factura Boleta de Venta Nota de Cr\u00e9dito Nota de D\u00e9bito Gu\u00eda de Remisi\u00f3n Comprobante de Retenci\u00f3n Comprobante de Percepci\u00f3n Resumen diario de Boletas Comunicaci\u00f3n de Bajas Resumen diario de Reversiones Uso \u00b6 Este ejemplo se base en el modelo de factura ( Invoice ), para generar un reporte HTML. <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Report\\Resolver\\DefaultTemplateResolver ; use Greenter\\Report\\HtmlReport ; $invoice = new Invoice (); $invoice -> setSerie ( 'F001' ); $invoice -> setCorrelativo ( '1' ); // ... $report = new HtmlReport (); $resolver = new DefaultTemplateResolver (); $report -> setTemplate ( $resolver -> getTemplate ( $invoice )); $params = [ 'system' => [ 'logo' => file_get_contents ( 'logo.png' ), // Logo de Empresa 'hash' => 'qqnr2dN4p/HmaEA/CJuVGo7dv5g=' , // Valor Resumen ], 'user' => [ 'header' => 'Telf: <b>(01) 123375</b>' , // Texto que se ubica debajo de la direcci\u00f3n de empresa 'extras' => [ // Leyendas adicionales [ 'name' => 'CONDICION DE PAGO' , 'value' => 'Efectivo' ], [ 'name' => 'VENDEDOR' , 'value' => 'GITHUB SELLER' ], ], 'footer' => '<p>Nro Resolucion: <b>3232323</b></p>' ] ]; $html = $report -> render ( $invoice , $params ); echo $html ; Personalizar \u00b6 Puedes crear tus propios reportes usando twig , puedes tener como base invoice.html.twig . Necesitas crear un directorio con las nuevas plantillas, en este ejemplo el directorio se llama custom . \u2502 \u251c\u2500/custom/ \u2502 \u251c\u2500 factura.html.twig \u2502 \u251c\u2500 nota-credito.html.twig \u2502 \u2502 Configuraci\u00f3n de HtmlReport . <?php use Greenter\\Report\\HtmlReport ; $twigOptions = [ 'cache' => __DIR__ . '/cache' , 'strict_variables' => true , ]; $report = new HtmlReport ( '/custom' , $twigOptions ); $report -> setTemplate ( 'factura.html.twig' ); $html = $report -> render ( $invoice , $params ); echo $html ; Reporte en PDF \u00b6 Para obtener una representaci\u00f3n en formato PDF, Utilizamos wkhtmltopdf . Instalar \u00b6 composer require greenter/htmltopdf Requerimientos Este paquete require que el ejecutable wkhtmltopdf este descargado o instalado en el host, y que el entorno de PHP permite ejecutar aplicaciones externas, es decir que el m\u00e9todo exec no se encuentre incluido en la configuraci\u00f3n disable_functions del php.ini Uso \u00b6 PdfReport sigue el patr\u00f3n Decorator , para generar el pdf a partir de HtmlReport o cualquier otra clase que implemente ReportInterface . <?php use Greenter\\Report\\HtmlReport ; use Greenter\\Report\\PdfReport ; use Greenter\\Model\\Sale\\Invoice ; $invoice = new Invoice (); // ... $htmlReport = new HtmlReport (); $html -> setTemplate ( 'invoice.html.twig' ); $report = new PdfReport ( $htmlReport ); // Options: Ver mas en https://wkhtmltopdf.org/usage/wkhtmltopdf.txt $report -> setOptions ( [ 'no-outline' , 'viewport-size' => '1280x1024' , 'page-width' => '21cm' , 'page-height' => '29.7cm' , ]); $report -> setBinPath ( 'wkhtmltopdf.exe' ); // Ruta relativa o absoluta de wkhtmltopdf // Los mismo parametros utilizados en HTML Report $params = [ /*...*/ ]; $pdf = $report -> render ( $invoice , $params ); if ( $pdf === null ) { $error = $report -> getExporter () -> getError (); echo 'Error: ' . $error ; return ; } file_put_contents ( 'invoice.pdf' , $pdf ); Previsualizaci\u00f3n \u00b6","title":"greenter/report"},{"location":"packages/report/#greenter-report","text":"Para elaborar una representaci\u00f3n impresa se dispone de los formatos: HTML y PDF.","title":"Greenter Report"},{"location":"packages/report/#instalar","text":"composer require greenter/report","title":"Instalar"},{"location":"packages/report/#documentos","text":"Lista de documentos con reporte disponible. Factura Boleta de Venta Nota de Cr\u00e9dito Nota de D\u00e9bito Gu\u00eda de Remisi\u00f3n Comprobante de Retenci\u00f3n Comprobante de Percepci\u00f3n Resumen diario de Boletas Comunicaci\u00f3n de Bajas Resumen diario de Reversiones","title":"Documentos"},{"location":"packages/report/#uso","text":"Este ejemplo se base en el modelo de factura ( Invoice ), para generar un reporte HTML. <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Report\\Resolver\\DefaultTemplateResolver ; use Greenter\\Report\\HtmlReport ; $invoice = new Invoice (); $invoice -> setSerie ( 'F001' ); $invoice -> setCorrelativo ( '1' ); // ... $report = new HtmlReport (); $resolver = new DefaultTemplateResolver (); $report -> setTemplate ( $resolver -> getTemplate ( $invoice )); $params = [ 'system' => [ 'logo' => file_get_contents ( 'logo.png' ), // Logo de Empresa 'hash' => 'qqnr2dN4p/HmaEA/CJuVGo7dv5g=' , // Valor Resumen ], 'user' => [ 'header' => 'Telf: <b>(01) 123375</b>' , // Texto que se ubica debajo de la direcci\u00f3n de empresa 'extras' => [ // Leyendas adicionales [ 'name' => 'CONDICION DE PAGO' , 'value' => 'Efectivo' ], [ 'name' => 'VENDEDOR' , 'value' => 'GITHUB SELLER' ], ], 'footer' => '<p>Nro Resolucion: <b>3232323</b></p>' ] ]; $html = $report -> render ( $invoice , $params ); echo $html ;","title":"Uso"},{"location":"packages/report/#personalizar","text":"Puedes crear tus propios reportes usando twig , puedes tener como base invoice.html.twig . Necesitas crear un directorio con las nuevas plantillas, en este ejemplo el directorio se llama custom . \u2502 \u251c\u2500/custom/ \u2502 \u251c\u2500 factura.html.twig \u2502 \u251c\u2500 nota-credito.html.twig \u2502 \u2502 Configuraci\u00f3n de HtmlReport . <?php use Greenter\\Report\\HtmlReport ; $twigOptions = [ 'cache' => __DIR__ . '/cache' , 'strict_variables' => true , ]; $report = new HtmlReport ( '/custom' , $twigOptions ); $report -> setTemplate ( 'factura.html.twig' ); $html = $report -> render ( $invoice , $params ); echo $html ;","title":"Personalizar"},{"location":"packages/report/#reporte-en-pdf","text":"Para obtener una representaci\u00f3n en formato PDF, Utilizamos wkhtmltopdf .","title":"Reporte en PDF"},{"location":"packages/report/#instalar_1","text":"composer require greenter/htmltopdf Requerimientos Este paquete require que el ejecutable wkhtmltopdf este descargado o instalado en el host, y que el entorno de PHP permite ejecutar aplicaciones externas, es decir que el m\u00e9todo exec no se encuentre incluido en la configuraci\u00f3n disable_functions del php.ini","title":"Instalar"},{"location":"packages/report/#uso_1","text":"PdfReport sigue el patr\u00f3n Decorator , para generar el pdf a partir de HtmlReport o cualquier otra clase que implemente ReportInterface . <?php use Greenter\\Report\\HtmlReport ; use Greenter\\Report\\PdfReport ; use Greenter\\Model\\Sale\\Invoice ; $invoice = new Invoice (); // ... $htmlReport = new HtmlReport (); $html -> setTemplate ( 'invoice.html.twig' ); $report = new PdfReport ( $htmlReport ); // Options: Ver mas en https://wkhtmltopdf.org/usage/wkhtmltopdf.txt $report -> setOptions ( [ 'no-outline' , 'viewport-size' => '1280x1024' , 'page-width' => '21cm' , 'page-height' => '29.7cm' , ]); $report -> setBinPath ( 'wkhtmltopdf.exe' ); // Ruta relativa o absoluta de wkhtmltopdf // Los mismo parametros utilizados en HTML Report $params = [ /*...*/ ]; $pdf = $report -> render ( $invoice , $params ); if ( $pdf === null ) { $error = $report -> getExporter () -> getError (); echo 'Error: ' . $error ; return ; } file_put_contents ( 'invoice.pdf' , $pdf );","title":"Uso"},{"location":"packages/report/#previsualizacion","text":"","title":"Previsualizaci\u00f3n"},{"location":"packages/sign/","text":"Greener XMLDsig \u00b6 Esta libreria permite realizar la firma digital de los documentos XML con un certificado electr\u00f3nico, siguiendo la normativa de SUNAT. Instalar \u00b6 composer require greenter/xmldsig Requerimientos Se necesitar tener habilitado la extension openssl en php.ini Uso \u00b6 Para este ejemplo necesitamos un archivo XML previamente generado, debemos asegurarnos de incluir la etiqueta <ext:ExtensionContent/> , que es donde se agregar\u00e1 el nodod de la firma. <?php use Greenter\\XMLSecLibs\\Sunat\\SignedXml ; $xml = file_get_contents ( '20600995805-01-F001-1.xml' ); $cert = file_get_contents ( 'certifcate.pem' ); $signer = new SignedXml (); $signer -> setCertificate ( $cert ); $xmlSigned = $signer -> signXml ( $xml ); file_put_contents ( \"signed.xml\" , $xmlSigned ); El resultado seria este: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Invoice xmlns= \"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\" xmlns:cac= \"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\" xmlns:cbc= \"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\" xmlns:ds= \"http://www.w3.org/2000/09/xmldsig#\" xmlns:ext= \"urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2\" > <ext:UBLExtensions> <ext:UBLExtension> <ext:ExtensionContent> <ds:Signature Id= \"SignIMM\" > <ds:SignedInfo> <ds:CanonicalizationMethod Algorithm= \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" /> <ds:SignatureMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" /> <ds:Reference URI= \"\" > <ds:Transforms> <ds:Transform Algorithm= \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" /> </ds:Transforms> <ds:DigestMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#sha1\" /> <ds:DigestValue> IwJuNQGQaHmmm3iv2jj8JDv70Ow= </ds:DigestValue> </ds:Reference> </ds:SignedInfo> <ds:SignatureValue> nLaghokzMNrmrfPnbIg9b...WluZTE1UiLFwZXXXPUlf2o= </ds:SignatureValue> <ds:KeyInfo> <ds:X509Data> <ds:X509Certificate> MIIFhzCCA3OgAwI...BgNVBAYTAlVTVQQIEwVNYWluZTEgMOiRJ00nE= </ds:X509Certificate> </ds:X509Data> </ds:KeyInfo> </ds:Signature> </ext:ExtensionContent> </ext:UBLExtension> </ext:UBLExtensions> <cbc:UBLVersionID> 2.1 </cbc:UBLVersionID> <cbc:CustomizationID> 2.0 </cbc:CustomizationID> <cbc:ID> F001-1 </cbc:ID> <!--....--> </Invoice> Datos a considerar: <ds:DigestValue> : Valor Resumen codificado en base64 , utilizado en la representaci\u00f3n impresa y codigo QR. <ds:SignatureValue> : Valor de la Firma codificado en base64 . <ds:X509Certificate> : Contenido del certificado, necesario para verificar la autenticidad del documento. Otros formatos de certificado Puedes seguir esta gu\u00eda , para convertir un certificado al formato requerido.","title":"greenter/xmldsig"},{"location":"packages/sign/#greener-xmldsig","text":"Esta libreria permite realizar la firma digital de los documentos XML con un certificado electr\u00f3nico, siguiendo la normativa de SUNAT.","title":"Greener XMLDsig"},{"location":"packages/sign/#instalar","text":"composer require greenter/xmldsig Requerimientos Se necesitar tener habilitado la extension openssl en php.ini","title":"Instalar"},{"location":"packages/sign/#uso","text":"Para este ejemplo necesitamos un archivo XML previamente generado, debemos asegurarnos de incluir la etiqueta <ext:ExtensionContent/> , que es donde se agregar\u00e1 el nodod de la firma. <?php use Greenter\\XMLSecLibs\\Sunat\\SignedXml ; $xml = file_get_contents ( '20600995805-01-F001-1.xml' ); $cert = file_get_contents ( 'certifcate.pem' ); $signer = new SignedXml (); $signer -> setCertificate ( $cert ); $xmlSigned = $signer -> signXml ( $xml ); file_put_contents ( \"signed.xml\" , $xmlSigned ); El resultado seria este: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Invoice xmlns= \"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\" xmlns:cac= \"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\" xmlns:cbc= \"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\" xmlns:ds= \"http://www.w3.org/2000/09/xmldsig#\" xmlns:ext= \"urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2\" > <ext:UBLExtensions> <ext:UBLExtension> <ext:ExtensionContent> <ds:Signature Id= \"SignIMM\" > <ds:SignedInfo> <ds:CanonicalizationMethod Algorithm= \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\" /> <ds:SignatureMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\" /> <ds:Reference URI= \"\" > <ds:Transforms> <ds:Transform Algorithm= \"http://www.w3.org/2000/09/xmldsig#enveloped-signature\" /> </ds:Transforms> <ds:DigestMethod Algorithm= \"http://www.w3.org/2000/09/xmldsig#sha1\" /> <ds:DigestValue> IwJuNQGQaHmmm3iv2jj8JDv70Ow= </ds:DigestValue> </ds:Reference> </ds:SignedInfo> <ds:SignatureValue> nLaghokzMNrmrfPnbIg9b...WluZTE1UiLFwZXXXPUlf2o= </ds:SignatureValue> <ds:KeyInfo> <ds:X509Data> <ds:X509Certificate> MIIFhzCCA3OgAwI...BgNVBAYTAlVTVQQIEwVNYWluZTEgMOiRJ00nE= </ds:X509Certificate> </ds:X509Data> </ds:KeyInfo> </ds:Signature> </ext:ExtensionContent> </ext:UBLExtension> </ext:UBLExtensions> <cbc:UBLVersionID> 2.1 </cbc:UBLVersionID> <cbc:CustomizationID> 2.0 </cbc:CustomizationID> <cbc:ID> F001-1 </cbc:ID> <!--....--> </Invoice> Datos a considerar: <ds:DigestValue> : Valor Resumen codificado en base64 , utilizado en la representaci\u00f3n impresa y codigo QR. <ds:SignatureValue> : Valor de la Firma codificado en base64 . <ds:X509Certificate> : Contenido del certificado, necesario para verificar la autenticidad del documento. Otros formatos de certificado Puedes seguir esta gu\u00eda , para convertir un certificado al formato requerido.","title":"Uso"},{"location":"packages/ws/","text":"Greenter WebServices \u00b6 Esta libreria permite establecer la conexi\u00f3n con los servicios de SUNAT, para realizar la comunicaci\u00f3n de los comprobantes electr\u00f3nicos emitidos. Internamente la libreria comprime los comprobantes (archivos XML) antes de enviarlo a SUNAT bajo el protocolo SOAP , despues de recibir el comprobante de recepci\u00f3n (CDR) extrae la respuesta para saber el estado del comprobante (Aprobado, Rechazado, Observaciones). Instalar \u00b6 composer require greenter/ws Requerimientos Se necesitar tener habilitado las extensiones soap y zip en php.ini Uso \u00b6 Para este ejemplo necesitamos un documento XML firmado, y para autenticarnos en los servicios de SUNAT, la clave SOL, que para los servicios BETA son: - User: 20000000001MODDATOS - Password: moddatos <?php use Greenter\\Ws\\Services\\SoapClient ; use Greenter\\Ws\\Services\\BillSender ; // URL del servicio para Facturas. $urlService = 'https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService' ; $soap = new SoapClient ( $urlService ); $soap -> setCredentials ( '20000000001MODDATOS' , 'moddatos' ); // user = ruc + usuario sol $sender = new BillSender (); $sender -> setClient ( $soap ); $xml = file_get_contents ( 'factura.xml' ); $result = $sender -> send ( /*Nombre del comprobante*/ '20000000001-01-F001-1' , $xml ); if ( ! $result -> isSuccess ()) { var_dump ( $result -> getError ()); return ; } $cdr = $result -> getCdrResponse (); file_put_contents ( 'R-20000000001-01-F001-1.zip' , $cdr -> getCdrZip ()); var_dump ( $cdr ); Esta es una referencia de las clases a utilizar segun el tipo de comprobante. - BillSender - Factura - Boleta de Venta - Notas de Cr\u00e9dito - Notas de D\u00e9bito - Comprobante de Percepci\u00f3n - Comprobante de Retenci\u00f3n - SummarySender - Resumen Diario de Boletas - Comunicaci\u00f3n de Baja - Resumen de Reversiones (dar de baja C. de Percepci\u00f3n y Retenci\u00f3n) Resumen diario \u00b6 El resumen diario tiene un proceso diferente al de las facturas, se tiene que realizar una segunda petici\u00f3n al servicio, para obtener la respuesta de un resumen diario previamente enviado. En el envio inicial, SUNAT nos retorna un numero de Ticket que es el que usaremos para consultar el estado. <?php use Greenter\\Ws\\Services\\SoapClient ; use Greenter\\Ws\\Services\\ExtService ; use Greenter\\Ws\\Services\\SummarySender ; // URL del servicio, el mismo de Facturas. $urlService = 'https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService' ; $soap = new SoapClient ( $urlService ); $soap -> setCredentials ( '20000000001MODDATOS' , 'moddatos' ); $sender = new SummarySender (); $sender -> setClient ( $soap ); $xml = file_get_contents ( 'resumen.xml' ); $result = $sender -> send ( '20000000001-RC-20200728-1' , $xml ); if ( ! $result -> isSuccess ()) { var_dump ( $result -> getError ()); return ; } $ticket = $result -> getTicket (); $statusService = new ExtService (); $statusService -> setClient ( $soap ); $status = $statusService -> getStatus ( $ticket ); if ( ! $status -> isSuccess ()) { var_dump ( $status ); return ; } $cdr = $status -> getCdrResponse (); file_put_contents ( 'R-20000000001-RC-20200728-1.zip' , $cdr -> getCdrZip ()); var_dump ( $cdr ); Nota La comunicaci\u00f3n de baja y resumen de reversi\u00f3n siguen el mismo proceso. Consulta CDR \u00b6 Si por alg\u00fan motivo no disponemos del CDR , lo podemos volver a obtener consultando al servicio de SUNAT, pero tener en cuenta que solo es posible en Producci\u00f3n y solo esta disponible para Facturas y Notas de Cr\u00e9dito/D\u00e9bito relacionada a facturas. <?php use Greenter\\Ws\\Services\\ConsultCdrService ; use Greenter\\Ws\\Services\\SoapClient ; // URL CDR de Producci\u00f3n $urlService = 'https://e-factura.sunat.gob.pe/ol-it-wsconscpegem/billConsultService' ; $soap = new SoapClient ( $urlService ); $soap -> setCredentials ( '20000000001MODDATOS' , 'moddatos' ); $service = new ConsultCdrService (); $service -> setClient ( $client ); $rucEmisor = '20000000001' ; $tipoDocumento = '01' ; // 01: Factura, 07: Nota de Cr\u00e9dito, 08: Nota de D\u00e9bito $serie = 'F001' ; $correlativo = '1' ; $result = $service -> getStatusCdr ( $rucEmisor , $tipoDocumento , $serie , $correlativo ); if ( ! $result -> isSuccess ()) { var_dump ( $result -> getError ()); return ; } $cdr = $result -> getCdrResponse (); if ( $cdr === null ) { echo 'CDR no encontrado, el comprobante no ha sido comunicado a SUNAT.' ; return ; } file_put_contents ( 'R-20000000001-01-F001-1.zip' , $cdr -> getCdrZip ()); var_dump ( $cdr ); Servicios \u00b6 SUNAT dispone de servicios de prueba ( BETA ) y de producci\u00f3n para los diferentes tipos de comprobantes electr\u00f3nicos. BETA Servicio Ruta Factura https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService?wsdl Guia https://e-beta.sunat.gob.pe/ol-ti-itemision-guia-gem-beta/billService?wsdl Retenci\u00f3n y Percepci\u00f3n https://e-beta.sunat.gob.pe/ol-ti-itemision-otroscpe-gem-beta/billService?wsdl Producci\u00f3n Servicio Ruta Factura https://e-factura.sunat.gob.pe/ol-ti-itcpfegem/billService?wsdl Guia https://e-guiaremision.sunat.gob.pe/ol-ti-itemision-guia-gem/billService?wsdl Retenci\u00f3n y Percepci\u00f3n https://e-factura.sunat.gob.pe/ol-ti-itemision-otroscpe-gem/billService?wsdl Consulta CDR https://e-factura.sunat.gob.pe/ol-it-wsconscpegem/billConsultService?wsdl","title":"greenter/ws"},{"location":"packages/ws/#greenter-webservices","text":"Esta libreria permite establecer la conexi\u00f3n con los servicios de SUNAT, para realizar la comunicaci\u00f3n de los comprobantes electr\u00f3nicos emitidos. Internamente la libreria comprime los comprobantes (archivos XML) antes de enviarlo a SUNAT bajo el protocolo SOAP , despues de recibir el comprobante de recepci\u00f3n (CDR) extrae la respuesta para saber el estado del comprobante (Aprobado, Rechazado, Observaciones).","title":"Greenter WebServices"},{"location":"packages/ws/#instalar","text":"composer require greenter/ws Requerimientos Se necesitar tener habilitado las extensiones soap y zip en php.ini","title":"Instalar"},{"location":"packages/ws/#uso","text":"Para este ejemplo necesitamos un documento XML firmado, y para autenticarnos en los servicios de SUNAT, la clave SOL, que para los servicios BETA son: - User: 20000000001MODDATOS - Password: moddatos <?php use Greenter\\Ws\\Services\\SoapClient ; use Greenter\\Ws\\Services\\BillSender ; // URL del servicio para Facturas. $urlService = 'https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService' ; $soap = new SoapClient ( $urlService ); $soap -> setCredentials ( '20000000001MODDATOS' , 'moddatos' ); // user = ruc + usuario sol $sender = new BillSender (); $sender -> setClient ( $soap ); $xml = file_get_contents ( 'factura.xml' ); $result = $sender -> send ( /*Nombre del comprobante*/ '20000000001-01-F001-1' , $xml ); if ( ! $result -> isSuccess ()) { var_dump ( $result -> getError ()); return ; } $cdr = $result -> getCdrResponse (); file_put_contents ( 'R-20000000001-01-F001-1.zip' , $cdr -> getCdrZip ()); var_dump ( $cdr ); Esta es una referencia de las clases a utilizar segun el tipo de comprobante. - BillSender - Factura - Boleta de Venta - Notas de Cr\u00e9dito - Notas de D\u00e9bito - Comprobante de Percepci\u00f3n - Comprobante de Retenci\u00f3n - SummarySender - Resumen Diario de Boletas - Comunicaci\u00f3n de Baja - Resumen de Reversiones (dar de baja C. de Percepci\u00f3n y Retenci\u00f3n)","title":"Uso"},{"location":"packages/ws/#resumen-diario","text":"El resumen diario tiene un proceso diferente al de las facturas, se tiene que realizar una segunda petici\u00f3n al servicio, para obtener la respuesta de un resumen diario previamente enviado. En el envio inicial, SUNAT nos retorna un numero de Ticket que es el que usaremos para consultar el estado. <?php use Greenter\\Ws\\Services\\SoapClient ; use Greenter\\Ws\\Services\\ExtService ; use Greenter\\Ws\\Services\\SummarySender ; // URL del servicio, el mismo de Facturas. $urlService = 'https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService' ; $soap = new SoapClient ( $urlService ); $soap -> setCredentials ( '20000000001MODDATOS' , 'moddatos' ); $sender = new SummarySender (); $sender -> setClient ( $soap ); $xml = file_get_contents ( 'resumen.xml' ); $result = $sender -> send ( '20000000001-RC-20200728-1' , $xml ); if ( ! $result -> isSuccess ()) { var_dump ( $result -> getError ()); return ; } $ticket = $result -> getTicket (); $statusService = new ExtService (); $statusService -> setClient ( $soap ); $status = $statusService -> getStatus ( $ticket ); if ( ! $status -> isSuccess ()) { var_dump ( $status ); return ; } $cdr = $status -> getCdrResponse (); file_put_contents ( 'R-20000000001-RC-20200728-1.zip' , $cdr -> getCdrZip ()); var_dump ( $cdr ); Nota La comunicaci\u00f3n de baja y resumen de reversi\u00f3n siguen el mismo proceso.","title":"Resumen diario"},{"location":"packages/ws/#consulta-cdr","text":"Si por alg\u00fan motivo no disponemos del CDR , lo podemos volver a obtener consultando al servicio de SUNAT, pero tener en cuenta que solo es posible en Producci\u00f3n y solo esta disponible para Facturas y Notas de Cr\u00e9dito/D\u00e9bito relacionada a facturas. <?php use Greenter\\Ws\\Services\\ConsultCdrService ; use Greenter\\Ws\\Services\\SoapClient ; // URL CDR de Producci\u00f3n $urlService = 'https://e-factura.sunat.gob.pe/ol-it-wsconscpegem/billConsultService' ; $soap = new SoapClient ( $urlService ); $soap -> setCredentials ( '20000000001MODDATOS' , 'moddatos' ); $service = new ConsultCdrService (); $service -> setClient ( $client ); $rucEmisor = '20000000001' ; $tipoDocumento = '01' ; // 01: Factura, 07: Nota de Cr\u00e9dito, 08: Nota de D\u00e9bito $serie = 'F001' ; $correlativo = '1' ; $result = $service -> getStatusCdr ( $rucEmisor , $tipoDocumento , $serie , $correlativo ); if ( ! $result -> isSuccess ()) { var_dump ( $result -> getError ()); return ; } $cdr = $result -> getCdrResponse (); if ( $cdr === null ) { echo 'CDR no encontrado, el comprobante no ha sido comunicado a SUNAT.' ; return ; } file_put_contents ( 'R-20000000001-01-F001-1.zip' , $cdr -> getCdrZip ()); var_dump ( $cdr );","title":"Consulta CDR"},{"location":"packages/ws/#servicios","text":"SUNAT dispone de servicios de prueba ( BETA ) y de producci\u00f3n para los diferentes tipos de comprobantes electr\u00f3nicos. BETA Servicio Ruta Factura https://e-beta.sunat.gob.pe/ol-ti-itcpfegem-beta/billService?wsdl Guia https://e-beta.sunat.gob.pe/ol-ti-itemision-guia-gem-beta/billService?wsdl Retenci\u00f3n y Percepci\u00f3n https://e-beta.sunat.gob.pe/ol-ti-itemision-otroscpe-gem-beta/billService?wsdl Producci\u00f3n Servicio Ruta Factura https://e-factura.sunat.gob.pe/ol-ti-itcpfegem/billService?wsdl Guia https://e-guiaremision.sunat.gob.pe/ol-ti-itemision-guia-gem/billService?wsdl Retenci\u00f3n y Percepci\u00f3n https://e-factura.sunat.gob.pe/ol-ti-itemision-otroscpe-gem/billService?wsdl Consulta CDR https://e-factura.sunat.gob.pe/ol-it-wsconscpegem/billConsultService?wsdl","title":"Servicios"},{"location":"packages/xml/","text":"Grenter XML \u00b6 Esta libreria permite generar documentos XML siguiendo el est\u00e1ndar UBL 2.0 y 2.1, ademas de considerar las normas establecidas por SUNAT. UBL 2.0 No usar la versi\u00f3n 2.0 para generar Facturas, Boletas, Notas de Cr\u00e9dito, Notas de D\u00e9bito, ya que SUNAT actualmente exige utilizar la versi\u00f3n UBL 2.1 . Instalar \u00b6 composer require greenter/xml Documentos \u00b6 Los documentos disponibles en este paquete son: Documento UBL Builder Comprobante Invoice InvoiceBuilder Factura, Boleta CreditNote NoteBuilder Nota de Cr\u00e9dito DebitNote NoteBuilder Nota de D\u00e9bito Summary SummaryBuilder Resumen diario Voided VoidedBuilder Comunicaci\u00f3n de Baja Despatch DespatchBuilder Gu\u00eda de Remisi\u00f3n Retention RetentionBuilder Retenci\u00f3n Perception PerceptionBuilder Percepci\u00f3n Uso \u00b6 Para generar el archivo XML nos basamos en modelos de documentos disponibles en greenter/core , los cuales implementan DocumentInterface . Para una factura el modelo a utilizar es Invoice , y para generar el XML debemos usar InvoiceBuilder . <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Xml\\Builder\\InvoiceBuilder ; $invoice = new Invoice (); $invoice -> setSerie ( 'F001' ); $invoice -> setCorrelativo ( '1' ); // ... $builder = new InvoiceBuilder (); $xml = $builder -> build ( $invoice ); echo $xml ; Tener en cuenta que esto solo crea el XML pero no realiza la firma, para ello utilizar greenter/xmldsig . El siguiente fragmento es una previsualizaci\u00f3n del resultado: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Invoice xmlns= \"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\" xmlns:cac= \"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\" xmlns:cbc= \"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\" xmlns:ds= \"http://www.w3.org/2000/09/xmldsig#\" xmlns:ext= \"urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2\" > <ext:UBLExtensions> <ext:UBLExtension> <ext:ExtensionContent> </ext:ExtensionContent> </ext:UBLExtension> </ext:UBLExtensions> <cbc:UBLVersionID> 2.1 </cbc:UBLVersionID> <cbc:CustomizationID> 2.0 </cbc:CustomizationID> <cbc:ID> F001-1 </cbc:ID> <!--....--> </Invoice> Avanzado \u00b6 Esta libreria para generar los XML emplea el motor de plantillas twig , si necesitas cambiar algunos parametros puedes hacerlo desde el constructor. Ejemplo <?php use Greenter\\Xml\\Builder\\InvoiceBuilder ; $options = [ 'cache' => '/tmp/compilation_cache' ]; $builder = new InvoiceBuilder ( $options ); Tambi\u00e9n puedes crear tu propia versi\u00f3n, implementando BuilderInterface .","title":"greenter/xml"},{"location":"packages/xml/#grenter-xml","text":"Esta libreria permite generar documentos XML siguiendo el est\u00e1ndar UBL 2.0 y 2.1, ademas de considerar las normas establecidas por SUNAT. UBL 2.0 No usar la versi\u00f3n 2.0 para generar Facturas, Boletas, Notas de Cr\u00e9dito, Notas de D\u00e9bito, ya que SUNAT actualmente exige utilizar la versi\u00f3n UBL 2.1 .","title":"Grenter XML"},{"location":"packages/xml/#instalar","text":"composer require greenter/xml","title":"Instalar"},{"location":"packages/xml/#documentos","text":"Los documentos disponibles en este paquete son: Documento UBL Builder Comprobante Invoice InvoiceBuilder Factura, Boleta CreditNote NoteBuilder Nota de Cr\u00e9dito DebitNote NoteBuilder Nota de D\u00e9bito Summary SummaryBuilder Resumen diario Voided VoidedBuilder Comunicaci\u00f3n de Baja Despatch DespatchBuilder Gu\u00eda de Remisi\u00f3n Retention RetentionBuilder Retenci\u00f3n Perception PerceptionBuilder Percepci\u00f3n","title":"Documentos"},{"location":"packages/xml/#uso","text":"Para generar el archivo XML nos basamos en modelos de documentos disponibles en greenter/core , los cuales implementan DocumentInterface . Para una factura el modelo a utilizar es Invoice , y para generar el XML debemos usar InvoiceBuilder . <?php use Greenter\\Model\\Sale\\Invoice ; use Greenter\\Xml\\Builder\\InvoiceBuilder ; $invoice = new Invoice (); $invoice -> setSerie ( 'F001' ); $invoice -> setCorrelativo ( '1' ); // ... $builder = new InvoiceBuilder (); $xml = $builder -> build ( $invoice ); echo $xml ; Tener en cuenta que esto solo crea el XML pero no realiza la firma, para ello utilizar greenter/xmldsig . El siguiente fragmento es una previsualizaci\u00f3n del resultado: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Invoice xmlns= \"urn:oasis:names:specification:ubl:schema:xsd:Invoice-2\" xmlns:cac= \"urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2\" xmlns:cbc= \"urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2\" xmlns:ds= \"http://www.w3.org/2000/09/xmldsig#\" xmlns:ext= \"urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2\" > <ext:UBLExtensions> <ext:UBLExtension> <ext:ExtensionContent> </ext:ExtensionContent> </ext:UBLExtension> </ext:UBLExtensions> <cbc:UBLVersionID> 2.1 </cbc:UBLVersionID> <cbc:CustomizationID> 2.0 </cbc:CustomizationID> <cbc:ID> F001-1 </cbc:ID> <!--....--> </Invoice>","title":"Uso"},{"location":"packages/xml/#avanzado","text":"Esta libreria para generar los XML emplea el motor de plantillas twig , si necesitas cambiar algunos parametros puedes hacerlo desde el constructor. Ejemplo <?php use Greenter\\Xml\\Builder\\InvoiceBuilder ; $options = [ 'cache' => '/tmp/compilation_cache' ]; $builder = new InvoiceBuilder ( $options ); Tambi\u00e9n puedes crear tu propia versi\u00f3n, implementando BuilderInterface .","title":"Avanzado"}]}